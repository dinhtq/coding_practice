{
  "name": "coding_practice",
  "version": "1.0.0",
  "description": "#### Tips 1. Greedy Approach 2. Simplify, adapt and solve strategy     * Can you solve a simpler version? i.e. if finding the second largest, can you solve for finding the largest? 3. Break things down into cases. 4. \"Runners\" techique     * can be used to get O(1) space     * \"slow\" and \"fast\" runners/pointers can be used to detect cycles",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dinhtq/coding_practice.git"
  },
  "author": "Jason Dinh",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/dinhtq/coding_practice/issues"
  },
  "homepage": "https://github.com/dinhtq/coding_practice#readme",
  "dependencies": {
    "lodash": "^4.17.11"
  }
}
